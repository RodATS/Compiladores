Program ::= StatmentList

StatmentList ::= Statment NEW_LINE StatmentList
StatmentList ::= E


Statment ::= TypeVar NEW_LINE           
Statment ::= TypeVarVarios > Funcion (IDList) NEW_LINE          
Statment ::= Funcion ( IDList ) NEW_LINE           
Statment ::= for ( ID in ID ) { NEW_LINE StatmentList NEW_LINE}          
Statment ::= if ( Expresion ) { NEW_LINE StatmentList NEW_LINE } else { NEW_LINE StatmentList NEW_LINE } 

TypeVar ::= Type id > Operacion	
TypeVar ::= Type id

TypeVarVarios ::= Type id TypeVarVarios'
     

TypeVarVarios' ::= , TypeVarVarios'		
TypeVarVarios' ::= TypeVarVarios		
TypeVarVarios' ::= E

Expresion ::= id OrExpresion	
Expresion ::= id AndExpresion	
Expresion ::= id ComparacionExpresion

OrExpresion ::= or Expresion		
OrExpresion ::= E


AndExpresion ::= and Expresion	
AndExpresion ::= E



ComparacionExpresion ::= Comparacion Expresion		 
ComparacionExpresion ::= E

Operacion ::= id Operacion'

Operacion' ::= Operador Operacion	
Operacion' ::= E

Funcion ::= crack  
Funcion ::= mvp          
Funcion ::= localiza          
Funcion ::= saca          
Funcion ::= wachea



IDList -> ID ID'
	-> id

ID -> Valor
  -> id

ID' 	-> , IDList
	-> E


Valor -> 0...9
          "string"
          'a'...'z'


Type -> str
        char
        int
        bool

Comparacion -> mayorq
              menorq
              igualq
              difq

Operador -> +
            -
