"S -> Program",
"Program -> Statement newline Statementlist",
"Statement -> for ( Typevar ; Expr ; Expr ) { newline Statementlist newline } | if ( Expr ) { newline Statementlist newline } else { newline Statementlist newline } | Typevar | Funciones ( ListId )",
"Statementlist -> Statement newline Statementlist | #",
"ListId -> id , ListId | #,
"Typevar -> Type id > cadena espace Stringlist",
"Type -> string | char",
"Stringlist -> cadena espace Stringlist | #",
"Expr -> Orexpr",
"Orexpr -> Andexpr Orexprprime",
"Orexprprime -> or Andexpr Orexprprime | #",
"Andexpr -> Notexpr Andexprprime",
"Andexprprime -> and Notexpr Andexprprime | #",
"Notexpr -> Compexpr Notexprprime",
"Notexprprime -> not Compexpr Notexprprime | #",
"Compexpr -> Intexpr Compexprprime",
"Compexprprime -> CompOp Intexpr Compexprprime | #",
"Intexpr -> Factor Intexprprime",
"Intexprprime -> + Factor Intexprprime | - term Intexprprime | #",
"Factor -> - Factor | id | cadena | ( Expr )",
"Literal -> none | true | false",
"CompOp -> igualq | difq | menorq | mayorq",
"Funciones -> crack | mvp | localiza | saca | wachea"
