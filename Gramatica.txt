S ::= Program

Program ::= Statement newline Statementlist

Statement ::= for ( Typevar ; Expr ; Expr ) { newline Statementlist newline } 
Statement ::= if ( Expr ) { newline Statementlist newline } else { newline Statementlist newline } 
Statement ::= Typevar | Funciones ( ListId )

Statementlist ::= Statement newline Statementlist 
Statementlist ::= #

ListId ::= id , ListId 
ListId ::= #

Typevar ::= Type id > cadena espace Stringlist
Type ::= string
Type ::= char

Stringlist ::= cadena espace Stringlist 
Stringlist ::= #

Expr ::= Orexpr
Orexpr ::= Andexpr Orexprprime
Orexprprime ::= or Andexpr Orexprprime 
Orexprprime ::= #

Andexpr ::= Notexpr Andexprprime

Andexprprime ::= and Notexpr Andexprprime 
Andexprprime ::= #

Notexpr ::= Compexpr Notexprprime

Notexprprime ::= not Compexpr Notexprprime 
Notexprprime ::= #

Compexpr ::= Intexpr Compexprprime

Compexprprime ::= CompOp Intexpr Compexprprime 
Compexprprime ::= #

Intexpr ::= Factor Intexprprime

Intexprprime ::= + Factor Intexprprime 
Intexprprime ::= - term Intexprprime 
Intexprprime ::= #

Factor ::= - Factor 
Factor ::= id 
Factor ::= cadena 
Factor ::= ( Expr )

Literal ::= none 
Literal ::= true 
Literal ::= false

CompOp ::= igualq 
CompOp ::= difq 
CompOp ::= menorq 
CompOp ::= mayorq

Funciones ::= crack 
Funciones ::= mvp 
Funciones ::= localiza 
Funciones ::= saca 
Funciones ::= wachea
