Program ::= StatmentList

StatmentList ::= Statment NEW_LINE StatmentList
StatmentList ::= E


Statment ::= TypeVar 
Statment ::= TypeVarVarios > Funcion (IDList) 
Statment ::= Funcion ( IDList ) 
Statment ::= for ( ID in ID ) { NEW_LINE StatmentList NEW_LINE}          
Statment ::= if ( Expresion ) { NEW_LINE StatmentList NEW_LINE } else { NEW_LINE StatmentList NEW_LINE } 

TypeVar ::= Type id > Operacion	
TypeVar ::= Type id

TypeVarVarios ::= Type id TypeVarVarios'
     

TypeVarVarios' ::= , TypeVarVarios'		
TypeVarVarios' ::= TypeVarVarios		
TypeVarVarios' ::= E

Expresion ::= id OrExpresion	
Expresion ::= id AndExpresion	
Expresion ::= id ComparacionExpresion

OrExpresion ::= or Expresion		
OrExpresion ::= E


AndExpresion ::= and Expresion	
AndExpresion ::= E



ComparacionExpresion ::= Comparacion Expresion		 
ComparacionExpresion ::= E

Operacion ::= id Operacion'

Operacion' ::= Operador Operacion	
Operacion' ::= E

Funcion ::= crack  
Funcion ::= mvp          
Funcion ::= localiza          
Funcion ::= saca          
Funcion ::= wachea


IDList ::= ID ID'
IDList ::= id

ID ::= Valor
ID ::= id

ID' ::= , IDList
ID' ::= E

Valor ::= 0...9
Valor ::= "string"
Valor ::= 'a'...'z'


Type ::= str
Type ::= char
Type ::= int
Type ::= bool

Comparacion ::= mayorq
Comparacion ::=  menorq
Comparacion ::= igualq
Comparacion ::= difq

Operador ::= +
Operador ::=   -
